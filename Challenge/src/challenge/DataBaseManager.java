package challenge;

import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;


public class DataBaseManager {

	public static Connection connect(String path) throws IOException {
		
		System.out.println("-------- MySQL JDBC Connection ------------");

		Properties props = new Properties();
		FileInputStream in = new FileInputStream(path);
		props.load(in);
		in.close();

		String driver = props.getProperty("jdbc.driverClassName");
		try {
			if (driver != null) {
				Class.forName(driver);
			}
		} catch (ClassNotFoundException e) {
			System.out.println("Where is your MySQL JDBC Driver?");
			e.printStackTrace();
			return null;
		}

		String url = props.getProperty("jdbc.url");
		String username = props.getProperty("jdbc.username");
		String password = props.getProperty("jdbc.password");

		System.out.println("MySQL JDBC Driver Registered!");
		Connection connection = null;

		try {
			connection = DriverManager.getConnection(url, username, password);

		} catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
			return null;
		}

		if (connection != null) {
			System.out.println("Database connection succeded");
			return connection;
		} else {
			System.out.println("Failed to make connection!");
			return null;
		}
	}
	
	public static void start(Connection conn){
		String tableName = "vulnerableUrls";
		Statement stmt = null;

		try{
			stmt = conn.createStatement();
			//TODO: this depends on the database??
			String query = "CREATE TABLE IF NOT EXISTS " + tableName 
					+"(url VARCHAR(255) not NULL, " +
					"parameters VARCHAR(255),"+
	                " PRIMARY KEY ( url ))"; 
			stmt.executeUpdate(query);
			
		}catch(SQLException e){
			System.out.println("Error while creating table");
			e.printStackTrace();
		}
	}

	public static void main(String[] argv) throws IOException, SQLException {
		Connection conn = connect("database.properties");
		start(conn);
	}
}