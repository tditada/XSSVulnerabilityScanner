package challenge;

import static org.junit.Assert.assertTrue;

import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URISyntaxException;

import org.junit.Test;

import challenge.sendRequestAttackClass.httpResponse;

/** Testing protected methods
 * @author tere
 *
 */
public class requestsAttacksTest {

	/** Check that http://www.google.com.ar gets an 200 OK response
	 * @throws Exception
	 */
	@Test
	public void googleGetResponseCode200() throws Exception {
		httpResponse response = sendRequestAttackClass.sendGet("http://www.google.com.ar", "");
		assertTrue(response.responseCode == 200);
	}

	/** Test getAttack function verifying that xss-game.appspot is vulnerable 
	 * in level 1 with dummy attack (encoded)
	 * @throws UnsupportedEncodingException
	 * @throws MalformedURLException
	 * @throws URISyntaxException
	 */
	@Test
	public void getAttackDummyStringXssPageSuccess() throws UnsupportedEncodingException, MalformedURLException, URISyntaxException {
		boolean ret = sendRequestAttackClass.getAttack("https://xss-game.appspot.com/level1/frame",
				"?query=%3CSCRIPT%3Ealert%28String.fromCharCode%2877%2C69%2C82%2C67%2C65%2C68%2C79%29%29%3C%2FSCRIPT%3E",
				"<SCRIPT>alert(String.fromCharCode(77,69,82,67,65,68,79))</SCRIPT>", "");
		assertTrue(ret);
	}

}
